<?xml version="1.0"?>
<!--
    $Id: test_3_state.xml,v 1.12 2008/09/25 05:54:39 james Exp $

    $Log: test_3_state.xml,v $
    Revision 1.12  2008/09/25 05:54:39  james
    *** empty log message ***

    Revision 1.11  2004/01/02 01:22:43  james
    State machine renaming

    Revision 1.10  2008/07/21 10:16:17  james
    Added inactive - now just need a better name for it....

    Revision 1.9  2007/05/22 09:19:58  james
    *** empty log message ***

    Revision 1.8  2007/04/25 12:33:41  james
    Added simplified javascript format

    Revision 1.7  2007/04/22 06:34:46  james
    Getting state transitions happening

    Revision 1.6  2007/04/22 05:29:09  james
    Getting state transitions happening

    Revision 1.5  2007/04/21 06:19:35  james
    Working on state machine

    
    @brief Example XML for state evaluator
    
    processing
        sequence
        flow
                
        switch?
        case?
        while?
        pick?        
    
    execution
        invoke? 
        recieve?
        reply?
        return
    
    manipulation
        compare
            Equal - A comparison for equality. 
            GreaterThan - A comparison for greater than. 
            GreaterThanEqual - A comparison for greater than or equal to. 
            LessThan - A comparison for less than. 
            LessThanEqual - A comparison for less than or equal to. 
            NotEqual - A comparison for inequality
        copy

    FROM BPEL

    The token "activity" can be any of the following:
     <receive>
     <reply>
     <invoke>
     <assign>
     <throw>
     <terminate>
     <wait>
     <empty>
     <sequence>
     <switch>
     <while>
     <pick>
     <flow>
     <scope>
     <compensate>        
    
    
    
    code needs to have a pattern that follows exceptions
 -->
<!--<?xml-stylesheet type="text/xsl" href="E:\metawrap\javascript\tests\state\state.xsl"?>-->

<!--  XSLT WILL NOT WORK IF xmlns is included -->
<metawrap >
<!--  
<metawrap xmlns="../metawrap/metawrap.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="../metawrap/metawrap.xsd ../metawrap/metawrap.xsd" >
-->
    <states>
        <state name="loggedout">
            <active>
                <condition>                	
                    <code>
                        <body>
                            <return call="IsLoggedOut()"/>
                        </body>
                        <fault>
                            <!-- if anything bad happens - then we err on the side of security - we allow this state, which is logged out -->
                            <return with="true"/>
                        </fault>
                    </code>
                </condition>
            </active>
        
            <transitions>
                <from>                                
                
                   	<!--  When we transition from loggedout to null -->
                    <transition>
                        <code>
                            <body>
                            </body>
                        </code>
                    </transition>

                   	<!--  When we transition from loggedout to loggedin -->
                    <transition to="loggedin">
                        <code>
                            <body>
       	                        <return call="OnLoggedIn()"/>
                            </body>                 
                        </code>
                    </transition>               

                </from>
                <to>
                	<!--  When we transition to loggedout from null -->
                    <transition>
                        <code>
                            <body>
       	                            <return call="OnEnteredSiteAsLoggedOut()"/>
                            </body>
	                        <fault>
	                            <!-- if anything bad happens - then we err on the side of security and fail -->
	                            <return with="false"/>
	                        </fault>
                        </code>
                    </transition>
   
                    <!--  When we transition to loggedout from loggedin -->             
                    <transition from="loggedin">
                        <code>
                            <body>
       	                            <return call="OnLoggedOut()"/>
                            </body>
                        </code>
                    </transition>
                </to>
            </transitions>

            <exclude state="loggedin" />
        </state>
        <state name="loggedin">
            <active>
                <!-- List of tests that determine if you are in this state-->
                <condition>
                    <code>
                        <body>
                            <return call="IsLoggedIn()"/>
                        </body>
                        <fault>
                            <!-- if anything bad happens - then we err on the side of security - we disallow this state -->
                            <return with="false"/>
                        </fault>
                    </code>
                </condition>
            </active>     
            <transitions>
                <from>
                    <transition to="loggedout">
                        <code>
                            <body>
                            </body>
                        </code>             
                    </transition>
                </from>
                <to>
                    <transition from="loggedout">
                        <code>
                            <body>
                            </body>
                        </code>             
                    </transition>
                </to>
            </transitions>
            <!-- Exclusions -->
            <exclude state="loggedout" />

            <states>
                <state name="superuser">
                    <active>
                        <!-- List of tests that determine if you are in this state-->
                        <condition>
                            <code>
                                <body>
                                    <!-- Return the value of A -->
                                    <return with="true"/>                       
                                </body>
                                <fault>
                                    <!-- if anything bad happens - then we err on the side of security - we disallow this state, which is logged in -->
                                    <return with="false"/>
                                </fault>
                            </code>
                        </condition>
                    </active>
                
                    <transitions>
                        <from>
                            <transition to="guest">
                                <code>
                                    <body>
                                    </body>
                                </code>             
                            </transition>
                        </from>
                        <to>
                            <transition from="guest">
                                <code>
                                    <body>
                                    </body>
                                </code>             
                            </transition>
                        </to>
                    </transitions>
                    <exclude state="guest" />
                </state>
                <state name="guest">
                    <active>
                        <!-- List of tests that determine if you are in this state-->
                        <condition>
                            <code>
                                <body>
                                    <!-- Return the value of A -->
                                    <return with="false"/>                      
                                </body>
                                <fault>
                                    <!-- if anything bad happens - then we err on the side of security - we disallow this state, which is logged in -->
                                    <return with="false"/>
                                </fault>
                            </code>
                        </condition>
                    </active>

                    <transitions>
                        <from>
                            <transition to="superuser">
                                <code>
                                    <body>
                                    </body>
                                </code>             
                            </transition>
                        </from>
                        <to>
                            <transition from="superuser">
                                <code>
                                    <body>
                                    </body>
                                </code>             
                            </transition>
                        </to>
                    </transitions>
                    <exclude state="superuser" />
                </state>                    
            </states>
        </state>
        <!-- Example external transitions -->

        <transition from="loggedout" to="loggedin" >
            <code>
                <body>
                </body>
            </code>                 
        </transition>

        <transition from="loggedin" to="loggedout" >
            <code>
                <body>
                </body>
            </code>                 
        </transition>

    </states>
</metawrap>